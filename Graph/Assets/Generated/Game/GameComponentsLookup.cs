//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Acceleration = 0;
    public const int AnyRootCanvasChildListener = 1;
    public const int AnyTextListener = 2;
    public const int AnyTextRemovedListener = 3;
    public const int AudioConfig = 4;
    public const int AudioOnDestroy = 5;
    public const int AudioTarget = 6;
    public const int BeforeMovementStrategyCreate = 7;
    public const int BeforeMovementStrategyProcess = 8;
    public const int Camera = 9;
    public const int CharacterController = 10;
    public const int ChildTransformByConfig = 11;
    public const int ColliderHit = 12;
    public const int Color = 13;
    public const int ColorListener = 14;
    public const int ColorPublisher = 15;
    public const int ColorSubscriber = 16;
    public const int ComponentDataContainer = 17;
    public const int ComponentDataContainerListener = 18;
    public const int ConfigIndex = 19;
    public const int ControlledByPlayer = 20;
    public const int CreatedEntity = 21;
    public const int CreatorEntity = 22;
    public const int Destroyed = 23;
    public const int DestroyedListener = 24;
    public const int DestroyedPublisher = 25;
    public const int DestroyedSubscriber = 26;
    public const int DestroyStrategyCreate = 27;
    public const int DestroyStrategyProcess = 28;
    public const int EntityList = 29;
    public const int EntityListListener = 30;
    public const int EntityListPublisher = 31;
    public const int EntityListSubscriber = 32;
    public const int EntityType = 33;
    public const int FloatModifier = 34;
    public const int FloatModifierListener = 35;
    public const int FloatValue = 36;
    public const int FloatValueListener = 37;
    public const int FloatValuePublisher = 38;
    public const int FloatValueSubscriber = 39;
    public const int GameCreatedEntity = 40;
    public const int GameObject = 41;
    public const int GameOwnerTransformChild = 42;
    public const int GameTarget = 43;
    public const int Grounded = 44;
    public const int InputDomainGame = 45;
    public const int InstantRotation = 46;
    public const int LoadAssetsByLabel = 47;
    public const int LoadAssetsOperationCompleted = 48;
    public const int LoadAssetsOperation = 49;
    public const int MainCreator = 50;
    public const int MaxFloatValue = 51;
    public const int MaxFloatValueListener = 52;
    public const int MaxFloatValuePublisher = 53;
    public const int MaxFloatValueSubscriber = 54;
    public const int Mesh = 55;
    public const int MeshGameObject = 56;
    public const int MeshGameObjectListener = 57;
    public const int MeshListener = 58;
    public const int MinFloatValue = 59;
    public const int MinFloatValueListener = 60;
    public const int MoveDistance = 61;
    public const int MoveDistanceListener = 62;
    public const int Movement = 63;
    public const int MovementDirection = 64;
    public const int MovementListener = 65;
    public const int MovementStrategyCreate = 66;
    public const int MovementStrategyProcess = 67;
    public const int NextFrameDestroy = 68;
    public const int Owner = 69;
    public const int OwnerEntityConfigIndexKey = 70;
    public const int OwnerEntityTypeIndexKey = 71;
    public const int PlayableAudio = 72;
    public const int Point = 73;
    public const int PointListener = 74;
    public const int PointPublisher = 75;
    public const int PointSubscriber = 76;
    public const int Prefab = 77;
    public const int RootCanvasChild = 78;
    public const int RootOwner = 79;
    public const int Rotation = 80;
    public const int ScaleVector = 81;
    public const int ScaleVectorListener = 82;
    public const int SceneConfig = 83;
    public const int SceneLoaded = 84;
    public const int SceneLoadingProcess = 85;
    public const int SceneLoadMode = 86;
    public const int SceneLoadProgress = 87;
    public const int SecondFloatValue = 88;
    public const int SecondFloatValueListener = 89;
    public const int Services = 90;
    public const int SmoothRotation = 91;
    public const int SmoothRotationSpeed = 92;
    public const int Sprite = 93;
    public const int SpriteListener = 94;
    public const int StartTime = 95;
    public const int StartTimeListener = 96;
    public const int StrategyCreate = 97;
    public const int StrategyProcess = 98;
    public const int TargetEntityConfig = 99;
    public const int TargetEntityListMember = 100;
    public const int TargetMainCreator = 101;
    public const int TargetPublisher = 102;
    public const int TargetSubscriber = 103;
    public const int Text = 104;
    public const int TextListener = 105;
    public const int Time = 106;
    public const int TimeListener = 107;
    public const int TimeLoop = 108;
    public const int TimeMultiplier = 109;
    public const int TransformMoveVector = 110;
    public const int TransformPosition = 111;
    public const int TransformPositionTo = 112;
    public const int TransformRotation = 113;
    public const int TransformRotationTo = 114;
    public const int UnloadAssetsByLabel = 115;
    public const int Vector3Value = 116;
    public const int Velocity = 117;
    public const int VelocityListener = 118;
    public const int VelocityMax = 119;
    public const int VelocityMin = 120;
    public const int VelocityModifier = 121;
    public const int VelocityVector = 122;

    public const int TotalComponents = 123;

    public static readonly string[] componentNames = {
        "Acceleration",
        "AnyRootCanvasChildListener",
        "AnyTextListener",
        "AnyTextRemovedListener",
        "AudioConfig",
        "AudioOnDestroy",
        "AudioTarget",
        "BeforeMovementStrategyCreate",
        "BeforeMovementStrategyProcess",
        "Camera",
        "CharacterController",
        "ChildTransformByConfig",
        "ColliderHit",
        "Color",
        "ColorListener",
        "ColorPublisher",
        "ColorSubscriber",
        "ComponentDataContainer",
        "ComponentDataContainerListener",
        "ConfigIndex",
        "ControlledByPlayer",
        "CreatedEntity",
        "CreatorEntity",
        "Destroyed",
        "DestroyedListener",
        "DestroyedPublisher",
        "DestroyedSubscriber",
        "DestroyStrategyCreate",
        "DestroyStrategyProcess",
        "EntityList",
        "EntityListListener",
        "EntityListPublisher",
        "EntityListSubscriber",
        "EntityType",
        "FloatModifier",
        "FloatModifierListener",
        "FloatValue",
        "FloatValueListener",
        "FloatValuePublisher",
        "FloatValueSubscriber",
        "GameCreatedEntity",
        "GameObject",
        "GameOwnerTransformChild",
        "GameTarget",
        "Grounded",
        "InputDomainGame",
        "InstantRotation",
        "LoadAssetsByLabel",
        "LoadAssetsOperationCompleted",
        "LoadAssetsOperation",
        "MainCreator",
        "MaxFloatValue",
        "MaxFloatValueListener",
        "MaxFloatValuePublisher",
        "MaxFloatValueSubscriber",
        "Mesh",
        "MeshGameObject",
        "MeshGameObjectListener",
        "MeshListener",
        "MinFloatValue",
        "MinFloatValueListener",
        "MoveDistance",
        "MoveDistanceListener",
        "Movement",
        "MovementDirection",
        "MovementListener",
        "MovementStrategyCreate",
        "MovementStrategyProcess",
        "NextFrameDestroy",
        "Owner",
        "OwnerEntityConfigIndexKey",
        "OwnerEntityTypeIndexKey",
        "PlayableAudio",
        "Point",
        "PointListener",
        "PointPublisher",
        "PointSubscriber",
        "Prefab",
        "RootCanvasChild",
        "RootOwner",
        "Rotation",
        "ScaleVector",
        "ScaleVectorListener",
        "SceneConfig",
        "SceneLoaded",
        "SceneLoadingProcess",
        "SceneLoadMode",
        "SceneLoadProgress",
        "SecondFloatValue",
        "SecondFloatValueListener",
        "Services",
        "SmoothRotation",
        "SmoothRotationSpeed",
        "Sprite",
        "SpriteListener",
        "StartTime",
        "StartTimeListener",
        "StrategyCreate",
        "StrategyProcess",
        "TargetEntityConfig",
        "TargetEntityListMember",
        "TargetMainCreator",
        "TargetPublisher",
        "TargetSubscriber",
        "Text",
        "TextListener",
        "Time",
        "TimeListener",
        "TimeLoop",
        "TimeMultiplier",
        "TransformMoveVector",
        "TransformPosition",
        "TransformPositionTo",
        "TransformRotation",
        "TransformRotationTo",
        "UnloadAssetsByLabel",
        "Vector3Value",
        "Velocity",
        "VelocityListener",
        "VelocityMax",
        "VelocityMin",
        "VelocityModifier",
        "VelocityVector"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AccelerationComponent),
        typeof(AnyRootCanvasChildListenerComponent),
        typeof(AnyTextListenerComponent),
        typeof(AnyTextRemovedListenerComponent),
        typeof(AudioConfigComponent),
        typeof(AudioOnDestroyComponent),
        typeof(AudioTargetComponent),
        typeof(BeforeMovementStrategyCreateComponent),
        typeof(BeforeMovementStrategyProcessComponent),
        typeof(CameraComponent),
        typeof(CharacterControllerComponent),
        typeof(ChildTransformByConfigComponent),
        typeof(ColliderHitComponent),
        typeof(ColorComponent),
        typeof(ColorListenerComponent),
        typeof(ColorPublisherComponent),
        typeof(ColorSubscriberComponent),
        typeof(ComponentDataContainerComponent),
        typeof(ComponentDataContainerListenerComponent),
        typeof(ConfigIndexComponent),
        typeof(ControlledByPlayerComponent),
        typeof(CreatedEntityComponent),
        typeof(CreatorEntityComponent),
        typeof(DestroyedComponent),
        typeof(DestroyedListenerComponent),
        typeof(DestroyedPublisherComponent),
        typeof(DestroyedSubscriberComponent),
        typeof(DestroyStrategyCreateComponent),
        typeof(DestroyStrategyProcessComponent),
        typeof(EntityListComponent),
        typeof(EntityListListenerComponent),
        typeof(EntityListPublisherComponent),
        typeof(EntityListSubscriberComponent),
        typeof(EntityTypeComponent),
        typeof(FloatModifierComponent),
        typeof(FloatModifierListenerComponent),
        typeof(FloatValueComponent),
        typeof(FloatValueListenerComponent),
        typeof(FloatValuePublisherComponent),
        typeof(FloatValueSubscriberComponent),
        typeof(GameCreatedEntityComponent),
        typeof(GameObjectComponent),
        typeof(GameOwnerTransformChildComponent),
        typeof(GameTargetComponent),
        typeof(GroundedComponent),
        typeof(InputDomainGameComponent),
        typeof(InstantRotationComponent),
        typeof(LoadAssetsByLabelComponent),
        typeof(LoadAssetsOperationCompletedComponent),
        typeof(LoadAssetsOperationComponent),
        typeof(MainCreatorComponent),
        typeof(MaxFloatValueComponent),
        typeof(MaxFloatValueListenerComponent),
        typeof(MaxFloatValuePublisherComponent),
        typeof(MaxFloatValueSubscriberComponent),
        typeof(MeshComponent),
        typeof(MeshGameObjectComponent),
        typeof(MeshGameObjectListenerComponent),
        typeof(MeshListenerComponent),
        typeof(MinFloatValueComponent),
        typeof(MinFloatValueListenerComponent),
        typeof(MoveDistanceComponent),
        typeof(MoveDistanceListenerComponent),
        typeof(MovementComponent),
        typeof(MovementDirectionComponent),
        typeof(MovementListenerComponent),
        typeof(MovementStrategyCreateComponent),
        typeof(MovementStrategyProcessComponent),
        typeof(NextFrameDestroyComponent),
        typeof(OwnerComponent),
        typeof(OwnerEntityConfigIndexKeyComponent),
        typeof(OwnerEntityTypeIndexKeyComponent),
        typeof(PlayableAudioComponent),
        typeof(PointComponent),
        typeof(PointListenerComponent),
        typeof(PointPublisherComponent),
        typeof(PointSubscriberComponent),
        typeof(PrefabComponent),
        typeof(RootCanvasChildComponent),
        typeof(RootOwnerComponent),
        typeof(RotationComponent),
        typeof(ScaleVectorComponent),
        typeof(ScaleVectorListenerComponent),
        typeof(SceneConfigComponent),
        typeof(SceneLoadedComponent),
        typeof(SceneLoadingProcessComponent),
        typeof(SceneLoadModeComponent),
        typeof(SceneLoadProgressComponent),
        typeof(SecondFloatValueComponent),
        typeof(SecondFloatValueListenerComponent),
        typeof(ServicesComponent),
        typeof(SmoothRotationComponent),
        typeof(SmoothRotationSpeedComponent),
        typeof(SpriteComponent),
        typeof(SpriteListenerComponent),
        typeof(StartTimeComponent),
        typeof(StartTimeListenerComponent),
        typeof(StrategyCreateComponent),
        typeof(StrategyProcessComponent),
        typeof(TargetEntityConfigComponent),
        typeof(TargetEntityListMemberComponent),
        typeof(TargetMainCreatorComponent),
        typeof(TargetPublisherComponent),
        typeof(TargetSubscriberComponent),
        typeof(TextComponent),
        typeof(TextListenerComponent),
        typeof(TimeComponent),
        typeof(TimeListenerComponent),
        typeof(TimeLoopComponent),
        typeof(TimeMultiplierComponent),
        typeof(TransformMoveVectorComponent),
        typeof(TransformPositionComponent),
        typeof(TransformPositionToComponent),
        typeof(TransformRotationComponent),
        typeof(TransformRotationToComponent),
        typeof(UnloadAssetsByLabelComponent),
        typeof(Vector3ValueComponent),
        typeof(VelocityComponent),
        typeof(VelocityListenerComponent),
        typeof(VelocityMaxComponent),
        typeof(VelocityMinComponent),
        typeof(VelocityModifierComponent),
        typeof(VelocityVectorComponent)
    };
}
