//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UnloadAssetsByLabelComponent unloadAssetsByLabel { get { return (UnloadAssetsByLabelComponent)GetComponent(GameComponentsLookup.UnloadAssetsByLabel); } }
    public bool hasUnloadAssetsByLabel { get { return HasComponent(GameComponentsLookup.UnloadAssetsByLabel); } }

    public void AddUnloadAssetsByLabel(string[] newLabels) {
        var index = GameComponentsLookup.UnloadAssetsByLabel;
        var component = (UnloadAssetsByLabelComponent)CreateComponent(index, typeof(UnloadAssetsByLabelComponent));
        component.Labels = newLabels;
        AddComponent(index, component);
    }

    public void ReplaceUnloadAssetsByLabel(string[] newLabels) {
        var index = GameComponentsLookup.UnloadAssetsByLabel;
        var component = (UnloadAssetsByLabelComponent)CreateComponent(index, typeof(UnloadAssetsByLabelComponent));
        component.Labels = newLabels;
        ReplaceComponent(index, component);
    }

    public void RemoveUnloadAssetsByLabel() {
        RemoveComponent(GameComponentsLookup.UnloadAssetsByLabel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUnloadAssetsByLabel;

    public static Entitas.IMatcher<GameEntity> UnloadAssetsByLabel {
        get {
            if (_matcherUnloadAssetsByLabel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UnloadAssetsByLabel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUnloadAssetsByLabel = matcher;
            }

            return _matcherUnloadAssetsByLabel;
        }
    }
}
