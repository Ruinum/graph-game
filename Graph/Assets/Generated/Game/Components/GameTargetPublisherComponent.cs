//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetPublisherComponent targetPublisher { get { return (TargetPublisherComponent)GetComponent(GameComponentsLookup.TargetPublisher); } }
    public bool hasTargetPublisher { get { return HasComponent(GameComponentsLookup.TargetPublisher); } }

    public void AddTargetPublisher(System.Collections.Generic.List<GameEntity> newSubscribers) {
        var index = GameComponentsLookup.TargetPublisher;
        var component = (TargetPublisherComponent)CreateComponent(index, typeof(TargetPublisherComponent));
        component.Subscribers = newSubscribers;
        AddComponent(index, component);
    }

    public void ReplaceTargetPublisher(System.Collections.Generic.List<GameEntity> newSubscribers) {
        var index = GameComponentsLookup.TargetPublisher;
        var component = (TargetPublisherComponent)CreateComponent(index, typeof(TargetPublisherComponent));
        component.Subscribers = newSubscribers;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetPublisher() {
        RemoveComponent(GameComponentsLookup.TargetPublisher);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetPublisher;

    public static Entitas.IMatcher<GameEntity> TargetPublisher {
        get {
            if (_matcherTargetPublisher == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetPublisher);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetPublisher = matcher;
            }

            return _matcherTargetPublisher;
        }
    }
}
