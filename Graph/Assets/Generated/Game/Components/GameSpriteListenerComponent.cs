//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpriteListenerComponent spriteListener { get { return (SpriteListenerComponent)GetComponent(GameComponentsLookup.SpriteListener); } }
    public bool hasSpriteListener { get { return HasComponent(GameComponentsLookup.SpriteListener); } }

    public void AddSpriteListener(System.Collections.Generic.List<ISpriteListener> newValue) {
        var index = GameComponentsLookup.SpriteListener;
        var component = (SpriteListenerComponent)CreateComponent(index, typeof(SpriteListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpriteListener(System.Collections.Generic.List<ISpriteListener> newValue) {
        var index = GameComponentsLookup.SpriteListener;
        var component = (SpriteListenerComponent)CreateComponent(index, typeof(SpriteListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpriteListener() {
        RemoveComponent(GameComponentsLookup.SpriteListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpriteListener;

    public static Entitas.IMatcher<GameEntity> SpriteListener {
        get {
            if (_matcherSpriteListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpriteListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpriteListener = matcher;
            }

            return _matcherSpriteListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSpriteListener(ISpriteListener value) {
        var listeners = hasSpriteListener
            ? spriteListener.value
            : new System.Collections.Generic.List<ISpriteListener>();
        listeners.Add(value);
        ReplaceSpriteListener(listeners);
    }

    public void RemoveSpriteListener(ISpriteListener value, bool removeComponentWhenEmpty = true) {
        var listeners = spriteListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSpriteListener();
        } else {
            ReplaceSpriteListener(listeners);
        }
    }
}
