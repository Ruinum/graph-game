//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LoadAssetsByLabelComponent loadAssetsByLabel { get { return (LoadAssetsByLabelComponent)GetComponent(GameComponentsLookup.LoadAssetsByLabel); } }
    public bool hasLoadAssetsByLabel { get { return HasComponent(GameComponentsLookup.LoadAssetsByLabel); } }

    public void AddLoadAssetsByLabel(string[] newLabels) {
        var index = GameComponentsLookup.LoadAssetsByLabel;
        var component = (LoadAssetsByLabelComponent)CreateComponent(index, typeof(LoadAssetsByLabelComponent));
        component.Labels = newLabels;
        AddComponent(index, component);
    }

    public void ReplaceLoadAssetsByLabel(string[] newLabels) {
        var index = GameComponentsLookup.LoadAssetsByLabel;
        var component = (LoadAssetsByLabelComponent)CreateComponent(index, typeof(LoadAssetsByLabelComponent));
        component.Labels = newLabels;
        ReplaceComponent(index, component);
    }

    public void RemoveLoadAssetsByLabel() {
        RemoveComponent(GameComponentsLookup.LoadAssetsByLabel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLoadAssetsByLabel;

    public static Entitas.IMatcher<GameEntity> LoadAssetsByLabel {
        get {
            if (_matcherLoadAssetsByLabel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LoadAssetsByLabel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLoadAssetsByLabel = matcher;
            }

            return _matcherLoadAssetsByLabel;
        }
    }
}
