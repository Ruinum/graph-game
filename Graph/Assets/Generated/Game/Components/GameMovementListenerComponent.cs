//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MovementListenerComponent movementListener { get { return (MovementListenerComponent)GetComponent(GameComponentsLookup.MovementListener); } }
    public bool hasMovementListener { get { return HasComponent(GameComponentsLookup.MovementListener); } }

    public void AddMovementListener(System.Collections.Generic.List<IMovementListener> newValue) {
        var index = GameComponentsLookup.MovementListener;
        var component = (MovementListenerComponent)CreateComponent(index, typeof(MovementListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMovementListener(System.Collections.Generic.List<IMovementListener> newValue) {
        var index = GameComponentsLookup.MovementListener;
        var component = (MovementListenerComponent)CreateComponent(index, typeof(MovementListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMovementListener() {
        RemoveComponent(GameComponentsLookup.MovementListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovementListener;

    public static Entitas.IMatcher<GameEntity> MovementListener {
        get {
            if (_matcherMovementListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovementListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovementListener = matcher;
            }

            return _matcherMovementListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMovementListener(IMovementListener value) {
        var listeners = hasMovementListener
            ? movementListener.value
            : new System.Collections.Generic.List<IMovementListener>();
        listeners.Add(value);
        ReplaceMovementListener(listeners);
    }

    public void RemoveMovementListener(IMovementListener value, bool removeComponentWhenEmpty = true) {
        var listeners = movementListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMovementListener();
        } else {
            ReplaceMovementListener(listeners);
        }
    }
}
