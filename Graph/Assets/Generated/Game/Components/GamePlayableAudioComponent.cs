//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayableAudioComponent playableAudio { get { return (PlayableAudioComponent)GetComponent(GameComponentsLookup.PlayableAudio); } }
    public bool hasPlayableAudio { get { return HasComponent(GameComponentsLookup.PlayableAudio); } }

    public void AddPlayableAudio(UnityEngine.AudioSource newSource) {
        var index = GameComponentsLookup.PlayableAudio;
        var component = (PlayableAudioComponent)CreateComponent(index, typeof(PlayableAudioComponent));
        component.Source = newSource;
        AddComponent(index, component);
    }

    public void ReplacePlayableAudio(UnityEngine.AudioSource newSource) {
        var index = GameComponentsLookup.PlayableAudio;
        var component = (PlayableAudioComponent)CreateComponent(index, typeof(PlayableAudioComponent));
        component.Source = newSource;
        ReplaceComponent(index, component);
    }

    public void RemovePlayableAudio() {
        RemoveComponent(GameComponentsLookup.PlayableAudio);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayableAudio;

    public static Entitas.IMatcher<GameEntity> PlayableAudio {
        get {
            if (_matcherPlayableAudio == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayableAudio);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayableAudio = matcher;
            }

            return _matcherPlayableAudio;
        }
    }
}
