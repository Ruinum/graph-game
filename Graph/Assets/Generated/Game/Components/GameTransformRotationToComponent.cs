//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TransformRotationToComponent transformRotationTo { get { return (TransformRotationToComponent)GetComponent(GameComponentsLookup.TransformRotationTo); } }
    public bool hasTransformRotationTo { get { return HasComponent(GameComponentsLookup.TransformRotationTo); } }

    public void AddTransformRotationTo(UnityEngine.Quaternion newValue) {
        var index = GameComponentsLookup.TransformRotationTo;
        var component = (TransformRotationToComponent)CreateComponent(index, typeof(TransformRotationToComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTransformRotationTo(UnityEngine.Quaternion newValue) {
        var index = GameComponentsLookup.TransformRotationTo;
        var component = (TransformRotationToComponent)CreateComponent(index, typeof(TransformRotationToComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTransformRotationTo() {
        RemoveComponent(GameComponentsLookup.TransformRotationTo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTransformRotationTo;

    public static Entitas.IMatcher<GameEntity> TransformRotationTo {
        get {
            if (_matcherTransformRotationTo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TransformRotationTo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTransformRotationTo = matcher;
            }

            return _matcherTransformRotationTo;
        }
    }
}
