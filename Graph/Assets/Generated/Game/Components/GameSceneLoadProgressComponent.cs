//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SceneLoadProgressComponent sceneLoadProgress { get { return (SceneLoadProgressComponent)GetComponent(GameComponentsLookup.SceneLoadProgress); } }
    public bool hasSceneLoadProgress { get { return HasComponent(GameComponentsLookup.SceneLoadProgress); } }

    public void AddSceneLoadProgress(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle newValue) {
        var index = GameComponentsLookup.SceneLoadProgress;
        var component = (SceneLoadProgressComponent)CreateComponent(index, typeof(SceneLoadProgressComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneLoadProgress(UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle newValue) {
        var index = GameComponentsLookup.SceneLoadProgress;
        var component = (SceneLoadProgressComponent)CreateComponent(index, typeof(SceneLoadProgressComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneLoadProgress() {
        RemoveComponent(GameComponentsLookup.SceneLoadProgress);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSceneLoadProgress;

    public static Entitas.IMatcher<GameEntity> SceneLoadProgress {
        get {
            if (_matcherSceneLoadProgress == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SceneLoadProgress);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSceneLoadProgress = matcher;
            }

            return _matcherSceneLoadProgress;
        }
    }
}
