//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ComponentDataContainerListenerComponent componentDataContainerListener { get { return (ComponentDataContainerListenerComponent)GetComponent(GameComponentsLookup.ComponentDataContainerListener); } }
    public bool hasComponentDataContainerListener { get { return HasComponent(GameComponentsLookup.ComponentDataContainerListener); } }

    public void AddComponentDataContainerListener(System.Collections.Generic.List<IComponentDataContainerListener> newValue) {
        var index = GameComponentsLookup.ComponentDataContainerListener;
        var component = (ComponentDataContainerListenerComponent)CreateComponent(index, typeof(ComponentDataContainerListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceComponentDataContainerListener(System.Collections.Generic.List<IComponentDataContainerListener> newValue) {
        var index = GameComponentsLookup.ComponentDataContainerListener;
        var component = (ComponentDataContainerListenerComponent)CreateComponent(index, typeof(ComponentDataContainerListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentDataContainerListener() {
        RemoveComponent(GameComponentsLookup.ComponentDataContainerListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentDataContainerListener;

    public static Entitas.IMatcher<GameEntity> ComponentDataContainerListener {
        get {
            if (_matcherComponentDataContainerListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentDataContainerListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentDataContainerListener = matcher;
            }

            return _matcherComponentDataContainerListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddComponentDataContainerListener(IComponentDataContainerListener value) {
        var listeners = hasComponentDataContainerListener
            ? componentDataContainerListener.value
            : new System.Collections.Generic.List<IComponentDataContainerListener>();
        listeners.Add(value);
        ReplaceComponentDataContainerListener(listeners);
    }

    public void RemoveComponentDataContainerListener(IComponentDataContainerListener value, bool removeComponentWhenEmpty = true) {
        var listeners = componentDataContainerListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveComponentDataContainerListener();
        } else {
            ReplaceComponentDataContainerListener(listeners);
        }
    }
}
