//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AudioTargetComponent audioTarget { get { return (AudioTargetComponent)GetComponent(GameComponentsLookup.AudioTarget); } }
    public bool hasAudioTarget { get { return HasComponent(GameComponentsLookup.AudioTarget); } }

    public void AddAudioTarget(Ruinum.ECS.Configurations.Game.Strategies.Targets.ITargetStrategy newTarget) {
        var index = GameComponentsLookup.AudioTarget;
        var component = (AudioTargetComponent)CreateComponent(index, typeof(AudioTargetComponent));
        component.Target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceAudioTarget(Ruinum.ECS.Configurations.Game.Strategies.Targets.ITargetStrategy newTarget) {
        var index = GameComponentsLookup.AudioTarget;
        var component = (AudioTargetComponent)CreateComponent(index, typeof(AudioTargetComponent));
        component.Target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveAudioTarget() {
        RemoveComponent(GameComponentsLookup.AudioTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAudioTarget;

    public static Entitas.IMatcher<GameEntity> AudioTarget {
        get {
            if (_matcherAudioTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AudioTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAudioTarget = matcher;
            }

            return _matcherAudioTarget;
        }
    }
}
