//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FloatValueListenerComponent floatValueListener { get { return (FloatValueListenerComponent)GetComponent(GameComponentsLookup.FloatValueListener); } }
    public bool hasFloatValueListener { get { return HasComponent(GameComponentsLookup.FloatValueListener); } }

    public void AddFloatValueListener(System.Collections.Generic.List<IFloatValueListener> newValue) {
        var index = GameComponentsLookup.FloatValueListener;
        var component = (FloatValueListenerComponent)CreateComponent(index, typeof(FloatValueListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFloatValueListener(System.Collections.Generic.List<IFloatValueListener> newValue) {
        var index = GameComponentsLookup.FloatValueListener;
        var component = (FloatValueListenerComponent)CreateComponent(index, typeof(FloatValueListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFloatValueListener() {
        RemoveComponent(GameComponentsLookup.FloatValueListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFloatValueListener;

    public static Entitas.IMatcher<GameEntity> FloatValueListener {
        get {
            if (_matcherFloatValueListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FloatValueListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFloatValueListener = matcher;
            }

            return _matcherFloatValueListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFloatValueListener(IFloatValueListener value) {
        var listeners = hasFloatValueListener
            ? floatValueListener.value
            : new System.Collections.Generic.List<IFloatValueListener>();
        listeners.Add(value);
        ReplaceFloatValueListener(listeners);
    }

    public void RemoveFloatValueListener(IFloatValueListener value, bool removeComponentWhenEmpty = true) {
        var listeners = floatValueListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFloatValueListener();
        } else {
            ReplaceFloatValueListener(listeners);
        }
    }
}
