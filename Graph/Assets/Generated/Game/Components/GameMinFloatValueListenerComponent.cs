//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MinFloatValueListenerComponent minFloatValueListener { get { return (MinFloatValueListenerComponent)GetComponent(GameComponentsLookup.MinFloatValueListener); } }
    public bool hasMinFloatValueListener { get { return HasComponent(GameComponentsLookup.MinFloatValueListener); } }

    public void AddMinFloatValueListener(System.Collections.Generic.List<IMinFloatValueListener> newValue) {
        var index = GameComponentsLookup.MinFloatValueListener;
        var component = (MinFloatValueListenerComponent)CreateComponent(index, typeof(MinFloatValueListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMinFloatValueListener(System.Collections.Generic.List<IMinFloatValueListener> newValue) {
        var index = GameComponentsLookup.MinFloatValueListener;
        var component = (MinFloatValueListenerComponent)CreateComponent(index, typeof(MinFloatValueListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMinFloatValueListener() {
        RemoveComponent(GameComponentsLookup.MinFloatValueListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMinFloatValueListener;

    public static Entitas.IMatcher<GameEntity> MinFloatValueListener {
        get {
            if (_matcherMinFloatValueListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MinFloatValueListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMinFloatValueListener = matcher;
            }

            return _matcherMinFloatValueListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMinFloatValueListener(IMinFloatValueListener value) {
        var listeners = hasMinFloatValueListener
            ? minFloatValueListener.value
            : new System.Collections.Generic.List<IMinFloatValueListener>();
        listeners.Add(value);
        ReplaceMinFloatValueListener(listeners);
    }

    public void RemoveMinFloatValueListener(IMinFloatValueListener value, bool removeComponentWhenEmpty = true) {
        var listeners = minFloatValueListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMinFloatValueListener();
        } else {
            ReplaceMinFloatValueListener(listeners);
        }
    }
}
