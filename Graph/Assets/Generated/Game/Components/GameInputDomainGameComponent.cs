//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InputDomainGameComponent inputDomainGame { get { return (InputDomainGameComponent)GetComponent(GameComponentsLookup.InputDomainGame); } }
    public bool hasInputDomainGame { get { return HasComponent(GameComponentsLookup.InputDomainGame); } }

    public void AddInputDomainGame(Ruinum.ECS.Configurations.Input.InputDomainConfig newConfig) {
        var index = GameComponentsLookup.InputDomainGame;
        var component = (InputDomainGameComponent)CreateComponent(index, typeof(InputDomainGameComponent));
        component.Config = newConfig;
        AddComponent(index, component);
    }

    public void ReplaceInputDomainGame(Ruinum.ECS.Configurations.Input.InputDomainConfig newConfig) {
        var index = GameComponentsLookup.InputDomainGame;
        var component = (InputDomainGameComponent)CreateComponent(index, typeof(InputDomainGameComponent));
        component.Config = newConfig;
        ReplaceComponent(index, component);
    }

    public void RemoveInputDomainGame() {
        RemoveComponent(GameComponentsLookup.InputDomainGame);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInputDomainGame;

    public static Entitas.IMatcher<GameEntity> InputDomainGame {
        get {
            if (_matcherInputDomainGame == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InputDomainGame);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInputDomainGame = matcher;
            }

            return _matcherInputDomainGame;
        }
    }
}
