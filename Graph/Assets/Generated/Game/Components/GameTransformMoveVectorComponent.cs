//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TransformMoveVectorComponent transformMoveVector { get { return (TransformMoveVectorComponent)GetComponent(GameComponentsLookup.TransformMoveVector); } }
    public bool hasTransformMoveVector { get { return HasComponent(GameComponentsLookup.TransformMoveVector); } }

    public void AddTransformMoveVector(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.TransformMoveVector;
        var component = (TransformMoveVectorComponent)CreateComponent(index, typeof(TransformMoveVectorComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTransformMoveVector(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.TransformMoveVector;
        var component = (TransformMoveVectorComponent)CreateComponent(index, typeof(TransformMoveVectorComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTransformMoveVector() {
        RemoveComponent(GameComponentsLookup.TransformMoveVector);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTransformMoveVector;

    public static Entitas.IMatcher<GameEntity> TransformMoveVector {
        get {
            if (_matcherTransformMoveVector == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TransformMoveVector);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTransformMoveVector = matcher;
            }

            return _matcherTransformMoveVector;
        }
    }
}
