//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public StrategyProcessComponent strategyProcess { get { return (StrategyProcessComponent)GetComponent(GameComponentsLookup.StrategyProcess); } }
    public bool hasStrategyProcess { get { return HasComponent(GameComponentsLookup.StrategyProcess); } }

    public void AddStrategyProcess(Ruinum.ECS.Configurations.Game.Strategies.IEntityStrategy newStrategy) {
        var index = GameComponentsLookup.StrategyProcess;
        var component = (StrategyProcessComponent)CreateComponent(index, typeof(StrategyProcessComponent));
        component.Strategy = newStrategy;
        AddComponent(index, component);
    }

    public void ReplaceStrategyProcess(Ruinum.ECS.Configurations.Game.Strategies.IEntityStrategy newStrategy) {
        var index = GameComponentsLookup.StrategyProcess;
        var component = (StrategyProcessComponent)CreateComponent(index, typeof(StrategyProcessComponent));
        component.Strategy = newStrategy;
        ReplaceComponent(index, component);
    }

    public void RemoveStrategyProcess() {
        RemoveComponent(GameComponentsLookup.StrategyProcess);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStrategyProcess;

    public static Entitas.IMatcher<GameEntity> StrategyProcess {
        get {
            if (_matcherStrategyProcess == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StrategyProcess);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStrategyProcess = matcher;
            }

            return _matcherStrategyProcess;
        }
    }
}
